<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AirControl"
                    xmlns:convertors="clr-namespace:AirControl.Convertors">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ToggleLabel" TargetType="Label">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Canvas Width="10" Height="5">
                        <Path Stroke="{StaticResource DefaultForeground}"
                              StrokeThickness="1.2">
                            <Path.Data>
                                <PathGeometry Figures="M0,0 L5,5 L10,0" />
                            </Path.Data>
                        </Path>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:AirComboBox">
        <Setter Property="Background" Value="{StaticResource DefaultBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource DefaultBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultForeground}" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8 " />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border x:Name="Border" BorderThickness="0"
                                        Background="{StaticResource DefaultBackground}">
                                    <ContentPresenter Margin="{TemplateBinding Padding}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="Border"
                                                Value="{StaticResource LightMainColorHover}" />
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter Property="Background" TargetName="Border"
                                                Value="{StaticResource LightMainColorHighlighted}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AirComboBox">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition
                                MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                Width="0" />
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                               Margin="1" Placement="Bottom" PlacementTarget="{Binding ElementName=toggleButton}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <local:AirBorder x:Name="dropDownBorder"
                                             MinWidth="{Binding ActualWidth,ElementName=toggleButton}"
                                             Width="{Binding Width,ElementName=PART_Popup}"
                                             MaxWidth="{TemplateBinding Width}"
                                             BorderBrush="{StaticResource MainLinearGradientBorderBrush}"
                                             BorderThickness="1 0 1 1">

                                <Border.Effect>
                                    <DropShadowEffect Direction="-90" Color="Black" Opacity="0.2" />
                                </Border.Effect>
                                <local:AirScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0"
                                                VerticalAlignment="Top"
                                                Width="0">
                                            <Rectangle x:Name="opaqueRect"
                                                       Fill="{TemplateBinding Background}"
                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                       Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </local:AirScrollViewer>
                            </local:AirBorder>
                        </Popup>
                        <local:AirToggleButton Grid.Column="0" Grid.ColumnSpan="2" x:Name="toggleButton"
                                               MinWidth="{TemplateBinding MinWidth}"
                                               VerticalContentAlignment="Center"
                                               HorizontalContentAlignment="Left"
                                               Padding="{TemplateBinding Padding}"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                               Background="{TemplateBinding Background}"
                                               BorderBrush="{TemplateBinding BorderBrush}"
                                               CornerRadius="{TemplateBinding CornerRadius}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">

                            <local:AirPanel Type="HorizontalFull">
                                <ContentPresenter x:Name="contentPresenter"
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  IsHitTestVisible="false"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </local:AirPanel>
                        </local:AirToggleButton>

                        <Label Grid.Column="0" x:Name="label" Style="{StaticResource ToggleLabel}"
                               HorizontalAlignment="Right" Margin="4 2 -8 0" />


                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource MainLinearGradientBorderBrush}" />
                        </Trigger>
                        <!-- <Trigger Property="HasItems" Value="false"> -->
                        <!--     <Setter Property="Height" TargetName="dropDownBorder" Value="95" /> -->
                        <!-- </Trigger> -->
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="dropDownBorder" Property="Width"
                                    Value="{Binding  ActualWidth,ElementName=toggleButton}" />

                            <Setter TargetName="toggleButton" Property="CornerRadius"
                                    Value="{Binding CornerRadius ,RelativeSource={RelativeSource TemplatedParent},
                            Converter={convertors:CornerRadius2CornerConverter UseCornerRadius=True},
                            ConverterParameter=-1|-1|0|0}" />

                            <Setter TargetName="dropDownBorder" Property="CornerRadius"
                                    Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent},
                            Converter={convertors:CornerRadius2CornerConverter UseCornerRadius=True},
                            ConverterParameter=0|0|-1|-1}" />

                            <Setter TargetName="opaqueRect" Property="RadiusX"
                                    Value="{Binding CornerRadius,
                            RelativeSource={RelativeSource TemplatedParent},Converter={convertors:CornerRadius2CornerConverter Corner=TopLeft}}" />

                            <Setter TargetName="opaqueRect" Property="RadiusY"
                                    Value="{Binding CornerRadius,
                            RelativeSource={RelativeSource TemplatedParent},Converter={convertors:CornerRadius2CornerConverter Corner=TopLeft}}" />

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="label"
                                                Storyboard.TargetProperty="Opacity">
                                        <DoubleAnimation To="0" Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="label"
                                                Storyboard.TargetProperty="Opacity">
                                        <DoubleAnimation To="1" Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer"
                                 Value="false">
                            <Setter Property="Canvas.Top" TargetName="opaqueRect"
                                    Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter Property="Canvas.Left" TargetName="opaqueRect"
                                    Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>